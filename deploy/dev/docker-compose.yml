version: '3'
services:

    # BrandonBest.com Application
    brandonbest:
        container_name: brandonbest
        build:
            context: ../..
            dockerfile: ./deploy/dev/dockerfile
        environment:
            DB_HOST: ${DB_HOST:-mysql}
            VIRTUAL_HOST: ${VIRTUAL_HOST:-"brandonbest.test"}
            VIRTUAL_PORT: ${VIRTUAL_PORT:-3104}
        external_links:
            - ${REDIS_HOST:-redis}:${REDIS_HOST:-redis}
            - ${DB_HOST:-mysql}:${DB_HOST:-mysql}
        ports:
            - ${VIRTUAL_PORT:-3104}:${VIRTUAL_PORT:-3104}
        restart: on-failure
        volumes:
            - ${DATA_DIR:-/Users/brandonbest/Sites/brandonbest.com}:/app:rw
        working_dir: /app

    # Database
    mysql:
        build:
            context: ../..
            dockerfile: ./deploy/dev/mysql/dockerfile
        container_name: 'mysql'
        ports:
            - ${MYSQL_PORT:-3306}:3306
        environment:
            MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-root}
        restart: on-failure
        volumes:
            - ${MYSQL_DATA_DIR:-./data}:/var/lib/mysql:rw

    # Cache/Queues
    redis:
        build:
            context: ../..
            dockerfile: ./deploy/dev/redis/dockerfile
        container_name: 'redis'
        expose:
            - ${REDIS_PORT:-6379}
        ports:
            - ${REDIS_PORT:-6379}:6379
        restart: on-failure
        volumes:
            - ${REDIS_DATA_DIR:-./data}:/var/lib/redis

    # Local Proxy Service
    nginx-proxy:
        image: jwilder/nginx-proxy:alpine
        container_name: nginx-proxy
        build:
            context: ../..
            dockerfile: ./deploy/dev/nginx-proxy/dockerfile
        environment:
            HTTPS_METHOD: "noredirect"
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - /var/run/docker.sock:/tmp/docker.sock:ro
        restart: unless-stopped

# Networks
networks:
    default:
        external:
            name: nginx-proxy